[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`.",
        "stripped_doc" : [
          "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`."
        ],
        "def" : "DeepLTranslate.popup_size",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_size",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_size",
        "desc" : "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`."
      },
      {
        "doc" : "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`",
        "stripped_doc" : [
          "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`"
        ],
        "def" : "DeepLTranslate.popup_style",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_style",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_style",
        "desc" : "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`"
      },
      {
        "doc" : "If true, pressing ESC on the popup window will close it. Defaults to `true`",
        "stripped_doc" : [
          "If true, pressing ESC on the popup window will close it. Defaults to `true`"
        ],
        "def" : "DeepLTranslate.popup_close_on_escape",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_close_on_escape",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_close_on_escape",
        "desc" : "If true, pressing ESC on the popup window will close it. Defaults to `true`"
      },
      {
        "doc" : "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`",
        "stripped_doc" : [
          "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`"
        ],
        "def" : "DeepLTranslate.popup_close_after_copy",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_close_after_copy",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_close_after_copy",
        "desc" : "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`"
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "def" : "DeepLTranslate.logger",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Show a popup window with the translation of the currently selected text",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "items" : [
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "def" : "DeepLTranslate.logger",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
      },
      {
        "doc" : "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`",
        "stripped_doc" : [
          "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`"
        ],
        "def" : "DeepLTranslate.popup_close_after_copy",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_close_after_copy",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_close_after_copy",
        "desc" : "If true, the popup window will close after translated text is copied to pasteboard. Defaults to `true`"
      },
      {
        "doc" : "If true, pressing ESC on the popup window will close it. Defaults to `true`",
        "stripped_doc" : [
          "If true, pressing ESC on the popup window will close it. Defaults to `true`"
        ],
        "def" : "DeepLTranslate.popup_close_on_escape",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_close_on_escape",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_close_on_escape",
        "desc" : "If true, pressing ESC on the popup window will close it. Defaults to `true`"
      },
      {
        "doc" : "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`.",
        "stripped_doc" : [
          "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`."
        ],
        "def" : "DeepLTranslate.popup_size",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_size",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_size",
        "desc" : "`hs.geometry` object representing the size to use for the translation popup window. Defaults to `hs.geometry.size(770, 610)`."
      },
      {
        "doc" : "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`",
        "stripped_doc" : [
          "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`"
        ],
        "def" : "DeepLTranslate.popup_style",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate.popup_style",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "popup_style",
        "desc" : "Value representing the window style to be used for the translation popup window. This value needs to be a valid argument to [`hs.webview.setStyle()`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowStyle) (i.e. a combination of values from [`hs.webview.windowMasks`](http:\/\/www.hammerspoon.org\/docs\/hs.webview.html#windowMasks[]). Default value: `hs.webview.windowMasks.utility|hs.webview.windowMasks.HUD|hs.webview.windowMasks.titled|hs.webview.windowMasks.closable`"
      },
      {
        "doc" : "Binds hotkeys for DeepLTranslate\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * `translate` - translate the selected text without specifying source\/destination languages (source defaults to auto-detect, destination defaults to your last choice or to English)\n\nSample value for `mapping`:\n```\n {\n    translate = { { \"ctrl\", \"alt\", \"cmd\" }, \"E\" },\n }\n```",
        "stripped_doc" : [
          "Binds hotkeys for DeepLTranslate",
          ""
        ],
        "def" : "DeepLTranslate:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * `translate` - translate the selected text without specifying source\/destination languages (source defaults to auto-detect, destination defaults to your last choice or to English)",
          "",
          "Sample value for `mapping`:",
          "```",
          " {",
          "    translate = { { \"ctrl\", \"alt\", \"cmd\" }, \"E\" },",
          " }",
          "```"
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "bindHotkeys",
        "desc" : "Binds hotkeys for DeepLTranslate"
      },
      {
        "doc" : "Display a translation popup with the translation of the given text\n\nParameters:\n * text - string containing the text to translate\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Display a translation popup with the translation of the given text",
          ""
        ],
        "def" : "DeepLTranslate:translatePopup(text)",
        "parameters" : [
          " * text - string containing the text to translate",
          ""
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translatePopup(text)",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translatePopup",
        "desc" : "Display a translation popup with the translation of the given text"
      },
      {
        "doc" : "Display a translation popup with the translation of the given text\n\nParameters:\n * text - string containing the text to translate\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Display a translation popup with the translation of the given text",
          ""
        ],
        "def" : "DeepLTranslate:translatePopup(text)",
        "parameters" : [
          " * text - string containing the text to translate",
          ""
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translatePopup(text)",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translatePopup",
        "desc" : "Display a translation popup with the translation of the given text"
      },
      {
        "doc" : "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages",
          ""
        ],
        "def" : "DeepLTranslate:translateSelectionPopup()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translateSelectionPopup()",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translateSelectionPopup",
        "desc" : "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages"
      }
    ],
    "doc" : "Show a popup window with the translation of the currently selected text\n\nThe spoon uses the https:\/\/www.deepl.com translator page\nThe selected text is copied into the source field.  \nThe modal hotkey cmd+alt+ctrl+O replaces the selected text with the translation\n\nSupported language codes are listed at https:\/\/www.deepl.com\/translator\n\nThis is just an adaption of the Spoon PopupTranslateSelection written by Diego Zamboni\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/DeepLTranslate.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/DeepLTranslate.spoon.zip)",
    "Method" : [
      {
        "doc" : "Display a translation popup with the translation of the given text\n\nParameters:\n * text - string containing the text to translate\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Display a translation popup with the translation of the given text",
          ""
        ],
        "def" : "DeepLTranslate:translatePopup(text)",
        "parameters" : [
          " * text - string containing the text to translate",
          ""
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translatePopup(text)",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translatePopup",
        "desc" : "Display a translation popup with the translation of the given text"
      },
      {
        "doc" : "Display a translation popup with the translation of the given text\n\nParameters:\n * text - string containing the text to translate\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Display a translation popup with the translation of the given text",
          ""
        ],
        "def" : "DeepLTranslate:translatePopup(text)",
        "parameters" : [
          " * text - string containing the text to translate",
          ""
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translatePopup(text)",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translatePopup",
        "desc" : "Display a translation popup with the translation of the given text"
      },
      {
        "doc" : "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages\n\nReturns:\n * The DeepLTranslate object",
        "stripped_doc" : [
          "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages",
          ""
        ],
        "def" : "DeepLTranslate:translateSelectionPopup()",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:translateSelectionPopup()",
        "type" : "Method",
        "returns" : [
          " * The DeepLTranslate object"
        ],
        "name" : "translateSelectionPopup",
        "desc" : "Get the current selected text in the frontmost window and display a translation popup with the translation between the specified languages"
      },
      {
        "doc" : "Binds hotkeys for DeepLTranslate\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * `translate` - translate the selected text without specifying source\/destination languages (source defaults to auto-detect, destination defaults to your last choice or to English)\n\nSample value for `mapping`:\n```\n {\n    translate = { { \"ctrl\", \"alt\", \"cmd\" }, \"E\" },\n }\n```",
        "stripped_doc" : [
          "Binds hotkeys for DeepLTranslate",
          ""
        ],
        "def" : "DeepLTranslate:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * `translate` - translate the selected text without specifying source\/destination languages (source defaults to auto-detect, destination defaults to your last choice or to English)",
          "",
          "Sample value for `mapping`:",
          "```",
          " {",
          "    translate = { { \"ctrl\", \"alt\", \"cmd\" }, \"E\" },",
          " }",
          "```"
        ],
        "notes" : [

        ],
        "signature" : "DeepLTranslate:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "bindHotkeys",
        "desc" : "Binds hotkeys for DeepLTranslate"
      }
    ],
    "Field" : [

    ],
    "Command" : [

    ],
    "name" : "DeepLTranslate"
  }
]